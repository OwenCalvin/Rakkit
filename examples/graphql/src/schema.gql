# DO NOT EDIT THIS FILE, IT'S GENERATED AT EACH APP STARTUP #

"""a"""
enum asaasldk {
  yop
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface ExampleInterfaceType2 {
  hello4: DateTime!
}

type ExampleObjectType {
  hello: String
  test: MyInterface!
}

type ExampleObjectType0 {
  hello0: [String]!
}

type ExampleObjectType2 implements GraphQLInterfaceTypeExampleInterfaceType & ExampleInterfaceType2 {
  hello3: String!
  ms: Test!
  hello4: DateTime!
  date: Timestamp!
  hello2: ExampleObjectType
  enumz: testenum!
  resolveMe: String!
}

input GenericResponseGraphQLInputObjectTypeExampleInputTypeGraphQLInputObjectTypeExampleInputType2 {
  items: GraphQLInputObjectTypeExampleInputType
  items2: GraphQLInputObjectTypeExampleInputType2!
  hello3: String
  hello4: String!
  hello6: GraphQLInputObjectTypeExampleInputType
}

input GraphQLInputObjectTypeExampleInputType {
  hello3: String!
  enumz: testenum!
  resolveMe: String
}

input GraphQLInputObjectTypeExampleInputType2 {
  hello3: String!
  hello12: String
}

input GraphQLInputObjectTypePO0_TYPE_NAME_NOT_FOUND {
  po: String!
}

input GraphQLInputObjectTypePO1 {
  po: String!
  po0: GraphQLInputObjectTypePO0_TYPE_NAME_NOT_FOUND!
}

input GraphQLInputObjectTypePO2 {
  str: String!
  po: String!
  po02: GraphQLInputObjectTypePO0_TYPE_NAME_NOT_FOUND!
  po0: GraphQLInputObjectTypePO0_TYPE_NAME_NOT_FOUND!
}

interface GraphQLInterfaceTypeExampleInterfaceType {
  hello3: String!
  ms: Test!
}

interface GraphQLInterfaceTypePO0_TYPE_NAME_NOT_FOUND {
  po: String!
}

interface GraphQLInterfaceTypePO1 {
  po: String!
  po0: GraphQLObjectTypePO0RequiredExampleInputType!
}

"""aasjdasjd"""
type GraphQLObjectTypeExampleInputType {
  hello3: String!
  enumz: testenum!
  resolveMe: String
}

type GraphQLObjectTypeExampleInputType2 {
  hello3: String!
  hello12: String
}

type GraphQLObjectTypeExampleInterfaceType {
  hello3: String!
  ms: Test!
}

type GraphQLObjectTypePO0RequiredExampleInputType {
  po: String!
}

type GraphQLObjectTypePO1 {
  po: String!
  po0: GraphQLObjectTypePO0RequiredExampleInputType!
}

type GraphQLObjectTypePO2 implements GraphQLInterfaceTypePO1 {
  po: String!
  po0: GraphQLObjectTypePO0RequiredExampleInputType!
  str: String!
  po02: GraphQLObjectTypePO0RequiredExampleInputType!
}

type Mutation {
  helloWorldMutation: MyInterface!
}

interface MyInterface {
  myInterfaceField: String!
}

type MyInterfaceObj1 implements MyInterface {
  myInterfaceField: String!
  yo: String!
}

type MyInterfaceObj2 implements MyInterface {
  myInterfaceField: String!
}

type Query {
  a(items: GraphQLInputObjectTypeExampleInputType, items2: GraphQLInputObjectTypeExampleInputType2!, hello3: String!, hello4: String!, hello6: GraphQLInputObjectTypeExampleInputType, hello12: String, aa: Float!): test!
  helloWorld: test!
}

type RequiredExampleInputType {
  hello3: String!
  enumz: testenum!
  resolveMe: String!
}

type Response {
  hello3: String
  hello4: String!
  hello6: GraphQLObjectTypeExampleInputType
}

type Subscription {
  sub(topic: String!): Boolean!
}

union test = GraphQLObjectTypeExampleInputType | GraphQLObjectTypeExampleInputType2

interface Test {
  hello3: String!
  enumz: testenum!
  resolveMe: String
}

enum testenum {
  a
  b
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp
